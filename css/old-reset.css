@import url('https://fonts.googleapis.com/css2?family=Abril+Fatface&family=Arvo:wght@400;700&family=Dancing+Script&family=Dosis:wght@200;300;400;500;700&family=Exo:wght@100;200;300;400;500;700;900&family=Lato:wght@100;300;400;900&family=Libre+Baskerville:wght@400;700&family=Merriweather:wght@300;400;700;900&family=Mina:wght@400;700&family=Playfair+Display:wght@400;500;700;900&family=Poppins:wght@100;200;300;400;700&family=Quicksand:wght@300;400;500;700&family=Roboto:wght@100;300;400;500;700;900display=swap');
@import url('https://fonts.googleapis.com/css2?family=Monoton&display=swap');

:root {
	/* NUMBERS */

	--ratio: 1.1;
	--s-5: calc(var(--s-4) / var(--ratio));
	--s-4: calc(var(--s-3) / var(--ratio));
	--s-3: calc(var(--s-2) / var(--ratio));
	--s-2: calc(var(--s-1) / var(--ratio));
	--s-1: calc(var(--s0) / var(--ratio));
	--s0: 1rem;
	--s1: calc(var(--s0) * var(--ratio));
	--s2: calc(var(--s1) * var(--ratio));
	--s3: calc(var(--s2) * var(--ratio));
	--s4: calc(var(--s3) * var(--ratio));
	--s5: calc(var(--s4) * var(--ratio));

	/* using clamp from utopia */

	--space-3xs: clamp(0.3125rem, 0.3125rem + 0vw, 0.3125rem);
	--space-2xs: clamp(0.5625rem, 0.5408rem + 0.1087vw, 0.625rem);
	--space-xs: clamp(0.875rem, 0.8533rem + 0.1087vw, 0.9375rem);
	--space-s: clamp(1.125rem, 1.0815rem + 0.2174vw, 1.25rem);
	--space-m: clamp(1.6875rem, 1.6223rem + 0.3261vw, 1.875rem);
	--space-l: clamp(2.25rem, 2.163rem + 0.4348vw, 2.5rem);
	--space-xl: clamp(3.375rem, 3.2446rem + 0.6522vw, 3.75rem);
	--space-2xl: clamp(4.5rem, 4.3261rem + 0.8696vw, 5rem);
	--space-3xl: clamp(6.75rem, 6.4891rem + 1.3043vw, 7.5rem);

	--step--2: clamp(0.4775rem, 0.8043rem + -0.4217vw, 0.72rem);
	--step--1: clamp(0.7725rem, 0.9443rem + -0.2217vw, 0.9rem);
	--step-0: clamp(1.125rem, 1.0815rem + 0.2174vw, 1.25rem);
	--step-1: clamp(1.4063rem, 1.1919rem + 1.0717vw, 2.0225rem);
	--step-2: clamp(1.7581rem, 1.2314rem + 2.6337vw, 3.2725rem);
	--step-3: clamp(2.1975rem, 1.1201rem + 5.387vw, 5.295rem);
	--step-4: clamp(2.7469rem, 0.7225rem + 10.1217vw, 8.5669rem);
	--step-5: clamp(3.4331rem, -0.194rem + 18.1359vw, 13.8613rem);

	/* One-up pairs */
	--space-3xs-2xs: clamp(0.3125rem, 0.2038rem + 0.5435vw, 0.625rem);
	--space-2xs-xs: clamp(0.5625rem, 0.4321rem + 0.6522vw, 0.9375rem);
	--space-xs-s: clamp(0.875rem, 0.7446rem + 0.6522vw, 1.25rem);
	--space-s-m: clamp(1.125rem, 0.8641rem + 1.3043vw, 1.875rem);
	--space-m-l: clamp(1.6875rem, 1.4049rem + 1.413vw, 2.5rem);
	--space-l-xl: clamp(2.25rem, 1.7283rem + 2.6087vw, 3.75rem);
	--space-xl-2xl: clamp(3.375rem, 2.8098rem + 2.8261vw, 5rem);
	--space-2xl-3xl: clamp(4.5rem, 3.4565rem + 5.2174vw, 7.5rem);

	/* Custom pairs */
	--space-xs-2xl: clamp(0.875rem, -0.5598rem + 7.1739vw, 5rem);

	/* --measure sets max inline width and should be between 45 and 75 ch units for good readiing experience */
	--measure: 50ch;

	/* FONTS */

	--ff-sans: 'Poppins', sans-serif;
	--ff-serif: 'IBM Plex Serif', serif;

	/* SPACES */

	--border-thin: 1px;
	--border-thick: 10px;
	--sm-space: 0.5rem;
	--med-space: 0.75rem;
	--lg-space: 1.225rem;
	--xl-space: 1.75rem;
	--gutter: 1em;
	--br: 1rem;
	--flow-spacer: 1em;

	/* FONT WEIGHTS */

	--fw-100: 100;
	--fw-200: 200;
	--fw-300: 300;
	--fw-400: 400;
	--fw-700: 700;
	--fw-900: 900;

	/* COLOURS */
	--color-light: hsl(27, 26%, 92%);
	--color-dark: hsl(255, 83%, 19%);

	/* primary color block */
	--primary-color-100: hsl(5, 100%, 82%);
	--primary-color-300: hsl(5, 100%, 60%);
	--primary-color-600: hsl(5, 100%, 40%);
	--primary-color-900: hsl(5, 100%, 20%);
	/* secondary color block */
	--secondary-color-100: hsl(221, 100%, 80%);
	--secondary-color-300: hsl(221, 100%, 60%);
	--secondary-color-600: hsl(221, 100%, 40%);
	--secondary-color-900: hsl(221, 100%, 20%);

	/* more colour choices */

	--clr-neutral-100: hsl(221, 100%, 100%);
	--clr-neutral-200: hsl(63, 8%, 55%);
	--clr-neutral-300: hsl(63, 29%, 70%);
	--clr-neutral-400: hsl(63, 50%, 50%);
	--clr-neutral-500: hsl(63, 75%, 30%);
	--clr-neutral-900: hsl(63, 100%, 10%);

	--clr-highlight-light: hsl(327, 100%, 90%);
	--clr-highlight-dark: hsl(327, 100%, 12%);
}

* {
	/* font-family: 'Abril Fatface', cursive; */

	/* font-family: 'Arvo', serif; */
	/* font-family: 'Dancing Script', cursive; */
	/* font-family: 'Dosis', sans-serif; */

	/* font-family: 'Exo', sans-serif; */

	/* font-family: 'Lato', sans-serif; */

	/* font-family: 'Libre Baskerville', serif; */

	/* font-family: 'Merriweather', serif; */

	/* font-family: 'Playfair Display', serif; */

	/* font-family: 'Poppins', sans-serif; */

	/* font-family: 'Quicksand', sans-serif; */

	/* font-family: 'Mina', sans-serif; */

	font-family: 'Roboto', sans-serif;

	/*  */
	/* font-family: 'Monoton', sans-serif; */
}

/* RESET GET HIS NEW ONE */

*,
*::before,
*::after {
	box-sizing: border-box;
}

ol,
ul,
li,
a {
	list-style: none;
	margin: 0;
	padding: 0;
	text-decoration: none;
}

input,
button,
textarea,
select {
	font: inherit;
}

h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4,
h5,
.h5,
h6,
.h6 {
	line-height: 1;
}

body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
dl,
dd,
figure {
	margin: 0;
}

img {
	max-inline-size: 100%;
	height: auto;
	display: block;
	border-radius: var(--br);
}

/* TYPOGRAPHY */

* {
	max-inline-size: var(--measure);
	/* COULD PUT FONT WEIGHT ON SPECIFIC ELEMENTS INSTEAD? */
	font-weight: var(--fw-400);
}

body {
	/* background: var(--color-light);
	color: var(--color-dark); */
	/* font-family: “Georgia”; */
	font-size: var(--step-0);
	padding-block: var(--space-m, 0.5em);
}

.hero {
	width: auto;
	height: 20vh;

	background-image: url('/images/fot-12.jpg');
	background-size: contain;
	background-repeat: no-repeat;
	background-position: center;
}

.footer {
	font-size: var(--step--1);
}

/* .hero::before {
	content: '';
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	background: rgba(0, 0, 0, 0.2);
	z-index: 1;
} */
h1 {
	font-family: 'Monoton', sans-serif;
	color: var(--primary-color-900);
	font-size: var(--step-4);
	line-height: 1.1;
}
h2 {
	font-size: var(--step-2);
	font-family: 'Monoton', sans-serif;
}
h3 {
	font-size: var(--step-4);
}

html,
body,
main,
div,
header,
nav {
	max-inline-size: none;
}

/* h1 {
	font-size: var(--s5);
	font-weight: var(--fw-900);
	text-transform: uppercase;
}
h2 {
	font-size: var(--s4);
	font-weight: var(--fw-700);
} */
h3 {
	font-size: var(--step-1);
}
h4 {
	font-size: var(--s2);
}
h5 {
	font-size: var(--s1);
}
h6 {
	font-size: var(--s0);
}

/* CENTER */

.center {
	display: flex;
	flex-direction: column;
	/* This will affect alignment of headers */
	align-items: center;
	/* ... */
	box-sizing: content-box;
	max-inline-size: var(--measure);
	margin-inline: auto;
	padding-inline-start: 1em;
	padding-inline-end: 1em;
	/* This will affect text in paragraphs not headers */
	/* text-align: center; */
	/* ... */
}

/* BOX */

.box {
	padding: var(--s-3);
	border: var(--border-thin) solid;
	border-radius: var(--border-thick, 15%);
	color: var(--color-dark);
	background-color: var(--color-light);
	max-width: 40ch;
}

.box * {
	color: inherit;
}

.box.invert {
	color: var(--color-light);
	background-color: var(--color-dark);
}

/* CLUSTER */

.cluster {
	display: flex;
	flex-wrap: wrap;
	gap: 2rem;
	justify-content: space-between;
	align-items: center;
}

/* BUTTONS */

.button {
	border-radius: 15rem;
	padding: 0.5em;
	margin: 0.2em;
	background-color: var(--primary-color-900, red);
	color: var(--clr-highlight-light);
	display: inline-block;
	cursor: pointer;
	border: var(--border-thin) solid var(--primary-color-100);
}
.button:hover {
	scale: 1.15;
}

.button:active {
	scale: 1.2;
}

/* PARENT */
/* https://every-layout.dev/layouts/sidebar/ This class essentially sets an ideal width for all the child elements */
/* and is a prelude for understanding the use of the sidebar class - it is letting the container and browser decide */
/* and avoids the need for media queries */

.parent {
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
	/* default align items is stretch which would give equal heights */
	align-items: stretch;
	/* ... */
}

.parent > * {
	flex-grow: 1;
	flex-shrink: 1;
	flex-basis: 30ch;
}

/* SIDEBAR */

.with-sidebar {
	display: flex;
	flex-wrap: wrap;
	/* default align items is stretch which would give equal heights */
	align-items: flex-start;
	gap: var(--lg-space, 1em);
}

.with-sidebar > :last-child {
	flex-basis: 0;
	flex-grow: 999;
	min-inline-size: 50%;
}
.with-sidebar > :first-child {
	/* If sidebar contents are small or predictable size could omit the next line as the width will be detemined by content - it will still break at >50% sidebar width */
	flex-basis: 15ch;
	flex-grow: 1;
}

/*  SWITCHER */

.switcher {
	display: flex;
	flex-wrap: wrap; /* ↓ The default value is the first point on the modular scale */
	gap: var(--gutter, var(--s1)); /* ↓ The width at which the layout “breaks” */
	--threshold: 40rem;
}

.switcher > * {
	/* ↓ Allow children to grow */
	flex-grow: 1; /* ↓ Switch the layout at the --threshold */
	flex-basis: calc((var(--threshold) - 100%) * 999);
	/* gap: var(--gutter, var(--s1)); */
	gap: 2em;
}

.switcher > :nth-last-child(n + 5),
.switcher > :nth-last-child(n + 5) ~ * {
	/* ↓ Switch to a vertical configuration if there are more than 4 child elements */
	flex-basis: 100%;
}

/* GRID */

.grid {
	display: grid;
	grid-gap: 1rem;
}

@supports (width: min(250px, 100%)) {
	.grid {
		grid-template-columns: repeat(auto-fit, minmax(min(250px, 100%), 1fr));
	}
}

/* STACK */

.stack {
	display: flex;
	flex-direction: column;
	justify-content: flex-start;
}

.stack > * {
	margin-block: 0;
}

.stack > * + * {
	margin-block-start: var(--space, 1.5rem);
}
.stack img {
	/* width: 100%; */
	max-inline-size: 100%;
}

/* FRAME */

.frame {
	--n: 16;
	--d: 9;
	aspect-ratio: var(--n) / var(--d);
	overflow: hidden;
	display: flex;
	justify-content: center;
	align-items: center;
	border-radius: 15px;
}

.frame > img,
.frame > video {
	inline-size: 100%;
	block-size: 100%;
	object-fit: cover;
}

/* REEL */

.reel {
	display: flex;
	/* ↓ We only want horizontal scrolling */
	overflow-x: auto;
	/* ↓ First value: thumb; second value: track */
	scrollbar-color: var(--color-light) var(--color-dark);
	gap: var(--s1);
}
.reel::-webkit-scrollbar {
	block-size: 1rem;
}

.reel::-webkit-scrollbar-track {
	background-color: var(--color-dark);
}

.reel::-webkit-scrollbar-thumb {
	background-color: var(--color-dark);
	background-image: linear-gradient(
		var(--color-dark) 0,
		var(--color-dark) 0.25rem,
		var(--color-light) 0.25rem,
		var(--color-light) 0.75rem,
		var(--color-dark) 0.75rem
	);
}

.reel {
	block-size: 50vh;
}

.reel > img {
	block-size: 100%;
	width: auto;
}

/* IMPOSTER */

.imposter {
	position: fixed;
	inset-block-start: 50%;
	inset-inline-start: 50%;
	transform: translate(-50%, -50%);
}

.imposter.contain {
	--margin: 10px;
	overflow: auto;
	max-inline-size: calc(100% - (var(--margin) * 2));
	max-block-size: calc(100% - (var(--margin) * 2));
}
/* CARDS */
.cards {
}
.card {
	/* border: var(--clr-neutral-300) solid 2px; */
	/* border-radius: 25px; */
	padding: 1em;
	margin: 1em;
	/* /max-width: 40ch; */
	/* background-color: var(--secondary-color-100); */
}
.card-img {
	width: auto;
	height: auto;
}

.card-text {
	font-family: 'Dancing Script', cursive;
}

/* CARD END */

/* HIDE */

.hide {
	display: none;
}
/* GENERAL LAYOUT UTILITIES*/

.flow > * + * {
	margin-top: var(--flow-spacer, 1em);
}

/* Preserving formatting for stories */
/* Not working well and need to understand how this will be used */
pre {
	white-space: pre-wrap;
}

.message {
	font-family: 'Dancing Script', cursive;
}

